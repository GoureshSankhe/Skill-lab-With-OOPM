#include<iostream.h> class student
{
protected:
int roll_number;

public:
void get_number(int a)
{
roll_number = a;
}

void put_number(void)
{
cout<<"Roll No:"<<roll_number<<"\n";
}
};

class test : public student
{
protected:
float part1, part2;

public:
void get_marks(float x, float y)
{
part1 = x; part2 = y;
}

void put_marks(void)
{



}
};

class sports
{

cout<<"Marks obtained"<<"\n"
<<"part1 ="<<part1<<"\n"
<<"part2 ="<<part2<<"\n";

protected:
float score;

public:
void get_score(float s)
{
score = s;
}

void put_score(void)
{
cout<<"Sports wt:"<<score<<"\n\n";
}
};

class result : public test, public sports
{
float total; public:
void display(void);
};

void result ::display(void)
{
total = part1 + part2 + score;

put_number(); put_marks(); put_score();

cout<<"Total Score:"<<total<<"\n";
}

int main()
{
result student_1;

student_1.get_number (1234);
student_1.get_marks (27.5, 33.0);

student_1.get_score (6.0);
student_1.display (); return 0;
}


Q2.)To perform Hierarchical Inheritance in C++. Create an Employee class with attributes EmpID and EmpSalary.
Also create necessary methods/constructors to accept these values from the user.
Create classes permenantEmployee and TemporaryEmployee which will be derived classes of Employee
Mention hike attribute in these derived classes and calculate the total salary using generate_salary() method for respective types of employees
. Objects of the derived classes should be created and salaries for the permanent and temporary employees should be calculated and displayed on the screen.


#include <iostream>
#include <stdio.h>
using namespace std;
 

class basicInfo
{
    protected:  
        char    name[30];
        int     empId;
        char    gender;
    public:
        void getBasicInfo(void)
        {
            cout << "Enter Name: "; 
            cin.getline(name,30);
            cout << "Enter Emp. Id: ";
            cin  >> empId;
            cout << "Enter Gender: ";
            cin  >> gender;
        }
};
 

class deptInfo
{
    protected:  
        char    deptName[30];
        char    assignedWork[30];
        int     time2complete;
    public:
        void getDeptInfo(void)
        {
            cout << "Enter Department Name: "; 
            cin.ignore(1);
            cin.getline(deptName,30);
            cout << "Enter assigned work: ";
            fflush(stdin);
            cin.getline(assignedWork,30);
            cout << "Enter time in hours to complete work: ";
            cin  >> time2complete;
        }
};
 
class employee:private basicInfo, private deptInfo
{
    public:
        void getEmployeeInfo(void){
            cout << "Enter employee's basic info: " << endl;
            
            getBasicInfo();     
            cout << "Enter employee's department info: " << endl;
            
            getDeptInfo();      
        }
        void printEmployeeInfo(void)
        {
            cout << "Employee's Information is: "     << endl;
            cout << "Basic Information...:"       << endl;
            cout << "Name: "      << name   << endl;      
            cout << "Employee ID: " << empId  << endl;       
            cout << "Gender: "        << gender << endl << endl;
             
            cout << "Department Information...:"  << endl;
            cout << "Department Name: "           << deptName   << endl; 
            cout << "Assigned Work: "             << assignedWork << endl; 
            cout << "Time to complete work: "     << time2complete<< endl;
        }
};
 
int main()
{
   
    employee emp;
     
    emp.getEmployeeInfo();
    emp.printEmployeeInfo();
     
    return 0;
}
